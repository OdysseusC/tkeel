// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	errors "github.com/tkeel-io/kit/errors"
	codes "google.golang.org/grpc/codes"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the ego package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

var errUnknown *errors.TError
var errTenantAlreadyExisted *errors.TError
var errListTenant *errors.TError
var errInvalidArgument *errors.TError
var errInternalStore *errors.TError
var errInternalError *errors.TError
var errStoreCreatTenant *errors.TError
var errAlreadyExistedUser *errors.TError
var errResourceNotFound *errors.TError
var errStoreCreatAdmin *errors.TError
var errStoreCreatAdminRole *errors.TError

func init() {
	errUnknown = errors.New(int(codes.Unknown), "io.tkeel.security.api.tenant.v1.ERR_UNKNOWN", Error_ERR_UNKNOWN.String())
	errors.Register(errUnknown)
	errTenantAlreadyExisted = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_TENANT_ALREADY_EXISTED", Error_ERR_TENANT_ALREADY_EXISTED.String())
	errors.Register(errTenantAlreadyExisted)
	errListTenant = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_LIST_TENANT", Error_ERR_LIST_TENANT.String())
	errors.Register(errListTenant)
	errInvalidArgument = errors.New(int(codes.InvalidArgument), "io.tkeel.security.api.tenant.v1.ERR_INVALID_ARGUMENT", Error_ERR_INVALID_ARGUMENT.String())
	errors.Register(errInvalidArgument)
	errInternalStore = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_INTERNAL_STORE", Error_ERR_INTERNAL_STORE.String())
	errors.Register(errInternalStore)
	errInternalError = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_INTERNAL_ERROR", Error_ERR_INTERNAL_ERROR.String())
	errors.Register(errInternalError)
	errStoreCreatTenant = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_STORE_CREAT_TENANT", Error_ERR_STORE_CREAT_TENANT.String())
	errors.Register(errStoreCreatTenant)
	errAlreadyExistedUser = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_ALREADY_EXISTED_USER_", Error_ERR_ALREADY_EXISTED_USER_.String())
	errors.Register(errAlreadyExistedUser)
	errResourceNotFound = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_RESOURCE_NOT_FOUND", Error_ERR_RESOURCE_NOT_FOUND.String())
	errors.Register(errResourceNotFound)
	errStoreCreatAdmin = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_STORE_CREAT_ADMIN", Error_ERR_STORE_CREAT_ADMIN.String())
	errors.Register(errStoreCreatAdmin)
	errStoreCreatAdminRole = errors.New(int(codes.Internal), "io.tkeel.security.api.tenant.v1.ERR_STORE_CREAT_ADMIN_ROLE", Error_ERR_STORE_CREAT_ADMIN_ROLE.String())
	errors.Register(errStoreCreatAdminRole)
}

func ErrUnknown() errors.Error {
	return errUnknown
}

func ErrTenantAlreadyExisted() errors.Error {
	return errTenantAlreadyExisted
}

func ErrListTenant() errors.Error {
	return errListTenant
}

func ErrInvalidArgument() errors.Error {
	return errInvalidArgument
}

func ErrInternalStore() errors.Error {
	return errInternalStore
}

func ErrInternalError() errors.Error {
	return errInternalError
}

func ErrStoreCreatTenant() errors.Error {
	return errStoreCreatTenant
}

func ErrAlreadyExistedUser() errors.Error {
	return errAlreadyExistedUser
}

func ErrResourceNotFound() errors.Error {
	return errResourceNotFound
}

func ErrStoreCreatAdmin() errors.Error {
	return errStoreCreatAdmin
}

func ErrStoreCreatAdminRole() errors.Error {
	return errStoreCreatAdminRole
}
