
syntax = "proto3";

package api.security_oauth.v1;


import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/tkeel/api/security_oauth/v1;v1";
option java_multiple_files = true;
option java_package = "api.security_oauth.v1";

service Oauth {

	rpc Authorize (AuthorizeRequest) returns (AuthorizeResponse) {
		option (google.api.http) = {
			get : "/oauth/{tenant_id}/authorize"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary : "oauth authorize code with username and password"
			operation_id : "OauthAuthorize"
			tags : "OAuth"
			responses : [{
				key : "200"
				value : {description : "OK"}
			}]
		};
	}


	rpc Token (TokenRequest) returns (TokenResponse) {
		option (google.api.http) = {
			get : "/oauth/{tenant_id}/token"
		};

		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary : "oauth token with code or password"
			operation_id : "OauthToken"
			tags : "OAuth"
			responses : [{
				key : "200"
				value : {description : "OK"}
			}]
		};
	}
}

//
message AuthorizeRequest {
	string tenant_id = 1 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "tenantID path param"
		},
		(google.api.field_behavior) = REQUIRED
	];
	string response_type = 2 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "authorize response type, this must 'code',query param"
		},
		(google.api.field_behavior) = REQUIRED
	];
	string username = 3 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "username query param"
		},
		(google.api.field_behavior) = REQUIRED
	];
	string password =4 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "password query param"
		},
		(google.api.field_behavior) = REQUIRED
	];
}

message AuthorizeResponse {
	string code = 1;
}

message TokenRequest {
	string tenant_id = 1 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "tenant_id path param"
		},
		(google.api.field_behavior) = REQUIRED
	];
	string grant_type = 2 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "grant_type 'authorize_code','password', query param"
		},
		(google.api.field_behavior) = REQUIRED
	];
	string code = 3 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "code with authorize response,query param"
		},
		(google.api.field_behavior) = OPTIONAL
	];
	string username= 4 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "username while grant_type is password ,query param"
		},
		(google.api.field_behavior) = OPTIONAL
	];
	string password = 5 [
		(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
			description : "password while grant_type is password,query param"
		},
		(google.api.field_behavior) = OPTIONAL
	];
}

message TokenResponse {
	string access_token =1;
	string refresh_token =2;
	int64 expires_id =3;
	string token_type = 4;
}

