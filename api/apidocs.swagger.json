{
  "swagger": "2.0",
  "info": {
    "title": "api/security_oauth/v1/oauth.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Oauth"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/oauth/authenticate": {
      "get": {
        "summary": "oauth authenticate with header Authorization",
        "operationId": "OauthAuthenticate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/{tenant_id}/authorize": {
      "get": {
        "summary": "oauth authorize code with username and password",
        "operationId": "OauthAuthorize",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1AuthorizeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant_id",
            "description": "tenantID path param",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "response_type",
            "description": "authorize response type, this must 'code',query param",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "username query param",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "description": "password query param",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect_uri",
            "description": "redirect uri with code",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "description": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/{tenant_id}/token": {
      "get": {
        "summary": "oauth token with code or password",
        "operationId": "OauthToken",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1TokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant_id",
            "description": "tenant_id path param",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "grant_type",
            "description": "grant_type 'authorize_code','password', query param",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "description": "code with authorize response,query param",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "redirect_uri",
            "description": "redirect_uri while grant_type is code,query param",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "description": "username while grant_type is password ,query param",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "password while grant_type is password,query param",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "refresh_token",
            "description": "refresh token while grant_type is refresh_token,query param",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AuthenticateResponse": {
      "type": "object",
      "properties": {
        "expires_in": {
          "type": "string",
          "format": "int64"
        },
        "user_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "tenant_id": {
          "type": "string"
        }
      }
    },
    "v1AuthorizeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "v1TokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "expires_in": {
          "type": "string",
          "format": "int64"
        },
        "token_type": {
          "type": "string"
        }
      }
    }
  }
}
